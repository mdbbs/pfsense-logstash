filter {

    #parses eventid, syslog timestamp, program and message	
    grok {
      match => [ "message", "<(?<evtid>.*)>(?<datetime>%{SYSLOGTIMESTAMP}) (?<prog>.*?): (?<msg>.*)" ]
    }

    date {
      match => [ "datetime", "MMM dd HH:mm:ss" ]
      timezone => "America/Los_Angeles"
    }

    #if prog is filterlog
    if [prog] =~ /^filterlog$/ {
      grok {
        patterns_dir => "/etc/logstash/patterns"
        add_tag => [ "firewall" ]
        match => [ "msg", "%{PFSENSE_LOG_DATA}%{PFSENSE_IP_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}",
           "msg", "%{PFSENSE_LOG_DATA}%{PFSENSE_IPv4_SPECIFIC_DATA_ECN}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}" ]
      }

      #assuming igb0 is your external interface, geoip the source IP. 
      if [iface] == "igb0" {
      	geoip {
        	add_tag => [ "GeoIP" ]
        	source => "src_ip"
      	}
      }

      #assuming igb01 is your internal interface, geoip the destination IP. 
      if [iface] == "igb1" {
      	geoip {
        	add_tag => [ "GeoIP" ]
        	source => "dest_ip"
      	}
      }
    }
    
    if [prog] =~ /^dhcpd$/ {
      grok {
        add_tag => [ "dhcp" ]
        match => [ "msg", "^%{WORD:action} .* %{IP:src_ip} .* %{MAC:src_mac} \(%{HOSTNAME:src_host}\) .* %{WORD:iface}$"]
        match => [ "msg", "^%{WORD:action} .* %{IP:src_ip} .* %{MAC:src_mac} \(%{HOSTNAME:src_host}\) .* %{WORD:iface}:.*"]
        match => [ "msg", "^%{WORD:action}: .* %{IP:src_ip}"]
        match => [ "msg", "^%{WORD:action} .* %{MAC:src_mac} .* %{WORD:iface}$"]
        break_on_match => true
      }
    }
    
    mutate {
      lowercase => [ 'proto' ]
      remove_field => [ "msg" ]
    }
}
